apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: express-sample-app
spec:
  params:
    - name: app-name
      type: string
    - name: source-repo
      type: string
    - name: image-repo
      type: string
      description: Docker image repository
  tasks:
    - name: git-clone
      params:
        - name: url
          value: "$(params.source-repo)"
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: pipeline-shared-data
    - name: create-image
      params:
        - name: IMAGE
          value: "$(params.image-repo):$(tasks.git-clone.results.commit)"
      runAfter:
        - git-clone
      taskRef:
        name: buildah
        kind: ClusterTask
      workspaces:
        - name: source
          workspace: pipeline-shared-data
    - name: create-configuration
      params:
        - name: app-name
          value: "$(params.app-name)"
        - name: source-repo
          value: "$(params.source-repo)"
        - name: commit
          value: "$(tasks.git-clone.results.commit)"
        - name: image-repo
          value: "$(params.image-repo)"
      runAfter:
        - create-image
      taskRef:
        name: create-configuration
      workspaces:
        - name: source
          workspace: pipeline-shared-data
    - name: deploy
      params:
        - name: manifest
          value: "$(tasks.create-configuration.results.manifest)"
        - name: app-namespace
          value: "$(context.pipelineRun.namespace)"
      runAfter:
        - create-configuration
      taskRef:
        name: deploy
      workspaces:
        - name: source
          workspace: pipeline-shared-data   
  workspaces:
    - name: pipeline-shared-data
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: webhook-receiver
spec:
  params:
    - name: source-repo
      value: $(body.repository.url)
    - name: sha
      value: $(body.head_commit.id)
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: webhook-receiver
spec:
  params:
    - name: source-repo
      description: Source code repository
    - name: sha
      description: Precise SHA of the commit to build
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: express-sample-app-
      spec:
        serviceAccountName: build-bot
        params:
          # ...
          - name: source-repo
            value: $(tt.params.source-repo)
          - name: sha
            value: $(tt.params.sha)
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: express-sample-app
spec:
  params:
    # ...
    - name: sha
      type: string
      default: ""
      description: Precise SHA of the commit to build
  tasks:
    - name: clone-repository
      params:
        - name: url
          value: "$(params.source-repo)"
        - name: revision
          value: "$(params.sha)"
